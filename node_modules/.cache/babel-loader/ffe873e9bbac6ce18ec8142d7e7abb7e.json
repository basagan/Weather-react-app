{"ast":null,"code":"var _jsxFileName = \"/Users/tania/SheCodes/react/week4react/Weather-react-app/src/components/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport \"./weatherForecast.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null); //if the coordinates change - set loaded false\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setLoaded(true);\n    setForecast(response.data.daily);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                dayInfo: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = `c95d60a1e3adbeb286133f1ebebc2579`;\n    let latitude = props.coordinates.lat;\n    let longitude = props.coordinates.lon;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","WeatherForecastDay","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","map","dailyForecast","index","apiKey","latitude","lat","longitude","lon","apiUrl","get","then"],"sources":["/Users/tania/SheCodes/react/week4react/Weather-react-app/src/components/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport \"./weatherForecast.css\";\nimport axios from \"axios\";\n\nexport default function WeatherForecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  //if the coordinates change - set loaded false\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setLoaded(true);\n    setForecast(response.data.daily);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <WeatherForecastDay dayInfo={dailyForecast} />\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = `c95d60a1e3adbeb286133f1ebebc2579`;\n    let latitude = props.coordinates.lat;\n    let longitude = props.coordinates.lon;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAO,uBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAAA;;EAC7C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;EACA,IAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC,CAF6C,CAI7C;;EACAC,SAAS,CAAC,MAAM;IACdM,SAAS,CAAC,KAAD,CAAT;EACD,CAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;EAIA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;IAChCL,SAAS,CAAC,IAAD,CAAT;IACAE,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;EACD;;EAED,IAAIR,MAAJ,EAAY;IACV,oBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,UACGE,QAAQ,CAACO,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;UAC5C,IAAIA,KAAK,GAAG,CAAZ,EAAe;YACb,oBACE;cAAK,SAAS,EAAC,KAAf;cAAA,uBACE,QAAC,kBAAD;gBAAoB,OAAO,EAAED;cAA7B;gBAAA;gBAAA;gBAAA;cAAA;YADF,GAA0BC,KAA1B;cAAA;cAAA;cAAA;YAAA,QADF;UAKD,CAND,MAMO;YACL,OAAO,IAAP;UACD;QACF,CAVA;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAiBD,CAlBD,MAkBO;IACL,IAAIC,MAAM,GAAI,kCAAd;IACA,IAAIC,QAAQ,GAAGd,KAAK,CAACK,WAAN,CAAkBU,GAAjC;IACA,IAAIC,SAAS,GAAGhB,KAAK,CAACK,WAAN,CAAkBY,GAAlC;IACA,IAAIC,MAAM,GAAI,uDAAsDJ,QAAS,QAAOE,SAAU,UAASH,MAAO,eAA9G;IACAf,KAAK,CAACqB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBd,cAAvB;IACA,OAAO,IAAP;EACD;AACF;;GAxCuBP,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}